{"ast":null,"code":"var _jsxFileName = \"/Users/RPSB/Downloads/Grand Venice React Website Code/src/components/admin/StoreManage.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect, lazy, Suspense } from \"react\";\nimport firebase from \"firebase\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport TopRibbon from \"../includes/TopRibbon\";\nimport TopNavbar from \"../includes/Navbar\";\nimport SubscribeSection from \"../includes/SubscribeSection\";\nimport Footer from \"../includes/Footer\";\nimport Feedback from \"../includes/Feedback\";\nimport { Form, FormControl, Button, Modal, Container, Row, Col } from \"react-bootstrap\";\nimport { Formik } from \"formik\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StoreUpdate = /*#__PURE__*/lazy(_c = () => import(\"./StoreUpdate\"));\n_c2 = StoreUpdate;\nconst AddCat = /*#__PURE__*/lazy(_c3 = () => import(\"./Addcategory\"));\n_c4 = AddCat;\n\nconst StoreManage = () => {\n  _s();\n\n  var _storeSnapshot$docs;\n\n  //load category\n  const [categorySnapshot, categoryloading, categoryerror] = useCollection(firebase.firestore().collection('storeCategory')); //load stores\n\n  const [storeSnapshot, storeLoading, error] = useCollection(firebase.firestore().collection(\"store\")); //save store data from form\n\n  const [storeData, setStoreData] = useState({\n    category: []\n  }); //functions for store update modal\n\n  const [updateStore, setupdateStore] = useState({});\n  const [show, setShow] = useState(false);\n\n  const openHandle = () => {\n    setShow(true);\n  };\n\n  const closeHandle = () => {\n    setShow(false);\n  }; //functions for store category add Modal\n\n\n  const [showupdateCat, setShowupdateCat] = useState(false);\n\n  const deleteItem = (storeId, url) => {\n    let imageRef = firebase.storage().refFromURL(url);\n    imageRef.delete().then(() => {\n      console.log(\"Deleted\");\n    }).catch(err => console.log(err));\n    firebase.firestore().collection('store').doc(storeId).delete();\n  };\n\n  const SaveFormDatatoState = e => {\n    switch (e.target.name) {\n      case \"store_name\":\n        setStoreData({ ...storeData,\n          name: e.target.value\n        });\n        break;\n\n      case \"floor_option\":\n        setStoreData({ ...storeData,\n          [e.target.name]: e.target.value\n        });\n        break;\n\n      case \"store_img\":\n        setStoreData({ ...storeData,\n          image_url: e.target.files[0]\n        });\n        break;\n\n      case \"store_num\":\n        setStoreData({ ...storeData,\n          contact_detail: e.target.value\n        });\n        break;\n\n      case \"store_timing\":\n        setStoreData({ ...storeData,\n          timing: e.target.value\n        });\n        break;\n\n      case \"store_desc\":\n        setStoreData({ ...storeData,\n          description: e.target.value\n        });\n        break;\n\n      case \"store_category\":\n        let newArr = [...(storeData === null || storeData === void 0 ? void 0 : storeData.category)];\n\n        if (e.target.checked) {\n          setStoreData({ ...storeData,\n            category: [...newArr, e.target.value]\n          });\n        } else {\n          var index = newArr.indexOf(e.target.value);\n          console.log(index);\n          newArr.splice(index, 1);\n          setStoreData({ ...storeData,\n            category: [...newArr]\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const SaveStatetoDB = (data, e) => {\n    var _data$image_url;\n\n    e.preventDefault();\n    const uploadTask = firebase.storage().ref(`${data === null || data === void 0 ? void 0 : data.name}/`).child(data === null || data === void 0 ? void 0 : (_data$image_url = data.image_url) === null || _data$image_url === void 0 ? void 0 : _data$image_url.name).put(data === null || data === void 0 ? void 0 : data.image_url);\n    uploadTask.on('state_changed', snapShot => {//takes a snap shot of the process as it is happening\n    }, err => {\n      //catches the errors\n      console.log(err);\n    }, () => {\n      var _data$image_url2;\n\n      // gets the functions from storage refences the image storage in firebase by the children\n      // gets the download url then sets the image from firebase as the value for the imgUrl key:\n      firebase.storage().ref(`${data === null || data === void 0 ? void 0 : data.name}/`).child(data === null || data === void 0 ? void 0 : (_data$image_url2 = data.image_url) === null || _data$image_url2 === void 0 ? void 0 : _data$image_url2.name).getDownloadURL().then(fireBaseUrl => {\n        firebase.firestore().collection(\"store\").add({ ...storeData,\n          image_url: fireBaseUrl\n        });\n      }).then(bruh => alert(\"store added success\")).catch(error => {\n        console.error(error);\n      }).finally(result => setStoreData({\n        category: []\n      }));\n    });\n  };\n\n  const validationSchema = Yup.object().shape({\n    store_img: Yup.mixed().required(\"Image is required\"),\n    store_name: Yup.string().required(\"Name is required\"),\n    store_timing: Yup.string().required(\"Timing is required\"),\n    store_desc: Yup.string(),\n    store_num: Yup.string(),\n    store_category: Yup.array().required(\"Please select a category\"),\n    floor_option: Yup.string()\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid py-5\",\n      style: {\n        fontFamily: \"Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"top center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"info\",\n          className: \"text-white fw-bold\",\n          onClick: () => setShowupdateCat(true),\n          children: \"ADD CATEGORY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(AddCat, {\n          setCat: setShowupdateCat,\n          showCat: showupdateCat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row \",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Store Upload Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Formik, {\n            initialValues: {\n              store_img: \"\",\n              store_name: \"\",\n              store_timing: \"\",\n              store_desc: '',\n              store_num: \"\",\n              store_category: '',\n              floor_option: \"\"\n            },\n            validationSchema: validationSchema,\n            onSubmit: (values, {\n              resetForm,\n              setSubmitting\n            }) => {\n              setSubmitting(true);\n              resetForm();\n              setSubmitting(false);\n            },\n            children: ({\n              values,\n              errors,\n              touched,\n              isValid,\n              dirty,\n              handleChange,\n              handleBlur,\n              isSubmitting\n            }) => {\n              var _categorySnapshot$doc;\n\n              return /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: e => SaveStatetoDB(storeData, e),\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Store Image/Logo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"file\",\n                    onBlur: handleBlur,\n                    onChange: e => {\n                      SaveFormDatatoState(e);\n                      handleChange(e);\n                    },\n                    name: \"store_img\",\n                    value: values.store_img,\n                    className: errors.store_img && touched.store_img ? \"is-invalid\" : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.store_img\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Store Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    onBlur: handleBlur,\n                    onChange: e => {\n                      SaveFormDatatoState(e);\n                      handleChange(e);\n                    },\n                    name: \"store_name\",\n                    value: values.store_name,\n                    className: errors.store_name && touched.store_name ? \"is-invalid\" : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.store_name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Store Timing\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    onBlur: handleBlur,\n                    onChange: e => {\n                      SaveFormDatatoState(e);\n                      handleChange(e);\n                    },\n                    name: \"store_timing\",\n                    placeholder: \"Open 11am  -  8pm\",\n                    value: values.store_timing,\n                    className: errors.store_timing && touched.store_timing ? \"is-invalid\" : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.store_timing\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Store Description \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    onBlur: handleBlur,\n                    onChange: e => {\n                      SaveFormDatatoState(e);\n                      handleChange(e);\n                    },\n                    name: \"store_desc\",\n                    value: values.store_desc,\n                    className: errors.store_desc && touched.store_desc ? \"is-invalid\" : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.store_desc\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Store Contact Number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"text\",\n                    onBlur: handleBlur,\n                    onChange: e => {\n                      SaveFormDatatoState(e);\n                      handleChange(e);\n                    },\n                    name: \"store_num\",\n                    value: values.store_num,\n                    className: errors.store_num && touched.store_num ? \"is-invalid\" : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.store_num\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Store Category\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 62\n                  }, this), categorySnapshot === null || categorySnapshot === void 0 ? void 0 : (_categorySnapshot$doc = categorySnapshot.docs) === null || _categorySnapshot$doc === void 0 ? void 0 : _categorySnapshot$doc.map(item => /*#__PURE__*/_jsxDEV(Form.Check, {\n                    inline: true,\n                    onBlur: handleBlur,\n                    onChange: e => {\n                      SaveFormDatatoState(e);\n                      handleChange(e);\n                    },\n                    label: item === null || item === void 0 ? void 0 : item.data().label,\n                    name: \"store_category\",\n                    id: item === null || item === void 0 ? void 0 : item.data().id,\n                    value: item === null || item === void 0 ? void 0 : item.data().value,\n                    className: errors.store_category && touched.store_category ? \"is-invalid\" : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 25\n                  }, this)), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.store_category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 277,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  class: \"form-select-sm my-3\",\n                  \"aria-label\": \"Default select example\",\n                  onChange: e => {\n                    SaveFormDatatoState(e);\n                    handleChange(e);\n                  },\n                  name: \"floor_option\",\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"ground_floor\",\n                    selected: true,\n                    children: \"Ground Floor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"first_floor\",\n                    selected: true,\n                    children: \"First Floor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"second_floor\",\n                    children: \"Second Floor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"third_floor\",\n                    children: \"Third Floor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"primary\",\n                  type: \"submit\",\n                  className: dirty && isValid ? \"\" : 'disabled-btn',\n                  disabled: !(dirty && isValid),\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 15\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row my-4\",\n          children: [storeLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"d-flex justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"spinner-border\",\n              role: \"status\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"sr-only\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 28\n          }, this), storeSnapshot === null || storeSnapshot === void 0 ? void 0 : (_storeSnapshot$docs = storeSnapshot.docs) === null || _storeSnapshot$docs === void 0 ? void 0 : _storeSnapshot$docs.map(store => {\n            var _store$data, _store$data2, _store$data3, _store$data4;\n\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card  text-center mb-5 \",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"card-img-top p-5\",\n                    src: store === null || store === void 0 ? void 0 : (_store$data = store.data()) === null || _store$data === void 0 ? void 0 : _store$data.image_url\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 307,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n                  className: \"card-title\",\n                  style: {\n                    fontWeight: \"600\"\n                  },\n                  children: store === null || store === void 0 ? void 0 : (_store$data2 = store.data()) === null || _store$data2 === void 0 ? void 0 : _store$data2.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"card-text\",\n                    children: store === null || store === void 0 ? void 0 : (_store$data3 = store.data()) === null || _store$data3 === void 0 ? void 0 : _store$data3.timing\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    style: {\n                      color: \"rgba(0,0,0,0.5)\"\n                    },\n                    children: store === null || store === void 0 ? void 0 : (_store$data4 = store.data()) === null || _store$data4 === void 0 ? void 0 : _store$data4.contact_detail\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"card-footer text-muted d-flex justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"success\",\n                    onClick: () => {\n                      setupdateStore({ ...(store === null || store === void 0 ? void 0 : store.data()),\n                        id: store === null || store === void 0 ? void 0 : store.id\n                      });\n                      setShow(true);\n                    },\n                    children: \"EDIT\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: e => {\n                      var _store$data5;\n\n                      return window.confirm(\"Are you sure you wish to delete this item?\") && deleteItem(store === null || store === void 0 ? void 0 : store.id, store === null || store === void 0 ? void 0 : (_store$data5 = store.data()) === null || _store$data5 === void 0 ? void 0 : _store$data5.image_url);\n                    },\n                    children: \"DELETE\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 320,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 31\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(StoreUpdate, {\n        sdata: updateStore,\n        openHandle: openHandle,\n        closeHandle: closeHandle,\n        show: show\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(StoreManage, \"A6IHsCuVbj07t07XTu+hedT4EBk=\", false, function () {\n  return [useCollection, useCollection];\n});\n\n_c5 = StoreManage;\nexport default StoreManage;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"StoreUpdate$lazy\");\n$RefreshReg$(_c2, \"StoreUpdate\");\n$RefreshReg$(_c3, \"AddCat$lazy\");\n$RefreshReg$(_c4, \"AddCat\");\n$RefreshReg$(_c5, \"StoreManage\");","map":{"version":3,"sources":["/Users/RPSB/Downloads/Grand Venice React Website Code/src/components/admin/StoreManage.js"],"names":["React","memo","useState","useEffect","lazy","Suspense","firebase","useCollection","useDocument","connect","Link","TopRibbon","TopNavbar","SubscribeSection","Footer","Feedback","Form","FormControl","Button","Modal","Container","Row","Col","Formik","Yup","StoreUpdate","AddCat","StoreManage","categorySnapshot","categoryloading","categoryerror","firestore","collection","storeSnapshot","storeLoading","error","storeData","setStoreData","category","updateStore","setupdateStore","show","setShow","openHandle","closeHandle","showupdateCat","setShowupdateCat","deleteItem","storeId","url","imageRef","storage","refFromURL","delete","then","console","log","catch","err","doc","SaveFormDatatoState","e","target","name","value","image_url","files","contact_detail","timing","description","newArr","checked","index","indexOf","splice","SaveStatetoDB","data","preventDefault","uploadTask","ref","child","put","on","snapShot","getDownloadURL","fireBaseUrl","add","bruh","alert","finally","result","validationSchema","object","shape","store_img","mixed","required","store_name","string","store_timing","store_desc","store_num","store_category","array","floor_option","fontFamily","backgroundSize","backgroundPosition","values","resetForm","setSubmitting","errors","touched","isValid","dirty","handleChange","handleBlur","isSubmitting","docs","map","item","label","id","store","fontWeight","color","window","confirm"],"mappings":"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","sourcesContent":["import React,{memo, useState, useEffect,lazy, Suspense} from \"react\";\nimport firebase from \"firebase\";\nimport { useCollection,useDocument } from \"react-firebase-hooks/firestore\";\nimport {connect} from \"react-redux\";\nimport {Link} from 'react-router-dom';\nimport TopRibbon from \"../includes/TopRibbon\";\nimport TopNavbar from \"../includes/Navbar\";\nimport SubscribeSection from \"../includes/SubscribeSection\";\nimport Footer from \"../includes/Footer\";\nimport Feedback from \"../includes/Feedback\";\nimport {Form,FormControl, Button, Modal, Container, Row, Col} from \"react-bootstrap\";\nimport {Formik} from \"formik\";\nimport * as Yup from 'yup';\nconst StoreUpdate = lazy(() => import(\"./StoreUpdate\"));\nconst AddCat = lazy(() => import(\"./Addcategory\"));\n\n\nconst StoreManage = () => {\n  //load category\n  const [categorySnapshot,categoryloading, categoryerror] = useCollection(firebase.firestore().collection('storeCategory'));\n\n  //load stores\n  const [storeSnapshot,storeLoading,error] = useCollection(firebase.firestore().collection(\"store\"))\n\n  //save store data from form\n  const [storeData,setStoreData] = useState({category: []});\n\n//functions for store update modal\n\n  const [updateStore, setupdateStore] = useState({});\n  const [show, setShow] = useState(false);\n\n  const openHandle = () => {\n    setShow(true);\n\n  }\n\n  const closeHandle = () => {\n    setShow(false);\n\n  }\n\n//functions for store category add Modal\n  const [showupdateCat, setShowupdateCat] = useState(false);\n\n\n\n\n  const deleteItem = (storeId,url) => {\n     let imageRef = firebase.storage().refFromURL(url);\n      imageRef.delete().then(() => {\n          console.log(\"Deleted\")\n      }).catch(err => console.log(err))\n    firebase.firestore().collection('store').doc(storeId).delete();\n  }\n\n\n  const SaveFormDatatoState = (e) => {\n    switch(e.target.name){\n          case \"store_name\":\n            setStoreData({\n              ...storeData,\n              name: e.target.value,\n            });\n            break;\n\n            case \"floor_option\":\n              setStoreData({\n                ...storeData,\n                [e.target.name]: e.target.value,\n              });\n            break;\n\n          case \"store_img\":\n          setStoreData({\n            ...storeData,\n            image_url: e.target.files[0],\n          });\n          break;\n\n          case \"store_num\":\n          setStoreData({\n            ...storeData,\n            contact_detail: e.target.value,\n          });\n          break;\n\n          case \"store_timing\":\n          setStoreData({\n            ...storeData,\n            timing: e.target.value,\n          });\n          break;\n\n          case \"store_desc\":\n          setStoreData({\n            ...storeData,\n            description: e.target.value,\n          });\n          break;\n\n          case \"store_category\":\n          let newArr = [...storeData?.category];\n          if(e.target.checked){\n          setStoreData({\n            ...storeData,\n            category: [...newArr,e.target.value],\n          });\n        }\n        else{\n          var index = newArr.indexOf(e.target.value);\n          console.log(index);\n          newArr.splice(index, 1);\n          setStoreData({\n            ...storeData,\n            category: [...newArr],\n          });\n        }\n          break;\n\n          default:\n            break;\n    }\n  }\n\n\n  const SaveStatetoDB = (data,e) => {\n    e.preventDefault();\n        const uploadTask = firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).put(data?.image_url);\n\n        uploadTask.on('state_changed',\n      (snapShot) => {\n        //takes a snap shot of the process as it is happening\n      }, (err) => {\n        //catches the errors\n        console.log(err)\n      }, () => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).getDownloadURL()\n         .then(fireBaseUrl => {\n           firebase.firestore().collection(\"store\").add({\n             ...storeData,\n             image_url: fireBaseUrl,\n           })\n         }).then((bruh) => alert(\"store added success\"))\n          .catch((error) => {console.error(error);})\n          .finally((result) => setStoreData({category:[]}))\n      })\n  }\n\nconst validationSchema = Yup.object().shape({\n  store_img: Yup.mixed()\n  .required(\"Image is required\"),\n  store_name: Yup.string()\n  .required(\"Name is required\"),\n  store_timing: Yup.string()\n  .required(\"Timing is required\"),\n  store_desc:Yup.string(),\n  store_num: Yup.string(),\n  store_category: Yup.array()\n  .required(\"Please select a category\"),\n  floor_option: Yup.string(),\n\n\n})\n\n  return (\n    <>\n      <div\n        className=\"container-fluid py-5\"\n        style={{\n          fontFamily:\n            \"Inter,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen,Ubuntu,Cantarell,Fira Sans,Droid Sans,Helvetica Neue,sans-serif\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"top center\",\n        }}\n      >\n        <div className=\"container\">\n\n        <Button variant=\"info\" className=\"text-white fw-bold\" onClick={() => setShowupdateCat(true)}>ADD CATEGORY</Button>\n\n          <AddCat setCat = {setShowupdateCat} showCat = {showupdateCat} />\n          <div className=\"row \">\n              <h1>Store Upload Form</h1>\n              <Formik initialValues={{\n                store_img: \"\",\n                store_name: \"\",\n                store_timing: \"\",\n                store_desc: '',\n                store_num: \"\",\n                store_category: '',\n                floor_option: \"\"\n              }} validationSchema={validationSchema} onSubmit={(values,{resetForm,setSubmitting} ) => {\n                  setSubmitting(true);\n                  resetForm();\n                  setSubmitting(false);\n              }}>\n              {({\n                values,\n                errors,\n                touched,\n                isValid,\n                dirty,\n                handleChange,\n                handleBlur,\n                isSubmitting\n              }) => (\n              <Form onSubmit={(e) => SaveStatetoDB(storeData,e)}>\n                  <Form.Group>\n                      <Form.Label>Store Image/Logo</Form.Label>\n                      <Form.Control type=\"file\" onBlur={handleBlur} onChange={(e) => {SaveFormDatatoState(e);handleChange(e) }} name=\"store_img\" value={values.store_img}\n                      className={errors.store_img && touched.store_img ? \"is-invalid\" : null}/>\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.store_img}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group>\n                      <Form.Label>Store Name</Form.Label>\n                      <Form.Control type=\"text\" onBlur={handleBlur} onChange={(e) => {SaveFormDatatoState(e);handleChange(e) }} name=\"store_name\" value={values.store_name}\n                        className={errors.store_name && touched.store_name ? \"is-invalid\" : null}\n                      />\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.store_name}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group>\n                      <Form.Label>Store Timing</Form.Label>\n                      <Form.Control type=\"text\" onBlur={handleBlur} onChange={(e) => {SaveFormDatatoState(e);handleChange(e) }} name=\"store_timing\" placeholder=\"Open 11am  -  8pm\"\n                      value={values.store_timing}\n                      className={errors.store_timing && touched.store_timing ? \"is-invalid\" : null}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.store_timing}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group>\n                      <Form.Label>Store Description </Form.Label>\n                      <Form.Control as=\"textarea\" onBlur={handleBlur} onChange={(e) => {SaveFormDatatoState(e);handleChange(e) }} name=\"store_desc\" value={values.store_desc}\n                      className={errors.store_desc && touched.store_desc ? \"is-invalid\" : null}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.store_desc}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group>\n                      <Form.Label>Store Contact Number</Form.Label>\n                      <Form.Control type=\"text\" onBlur={handleBlur}  onChange={(e) => {SaveFormDatatoState(e);handleChange(e) }} name=\"store_num\" value={values.store_num}\n                      className={errors.store_num && touched.store_num ? \"is-invalid\" : null}/>\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.store_num}\n                      </Form.Control.Feedback>\n                  </Form.Group>\n\n                  <Form.Group>\n                      <Form.Label>Store Category</Form.Label><br />\n                      {categorySnapshot?.docs?.map((item) => (\n                        <Form.Check inline onBlur={handleBlur} onChange={(e) => {SaveFormDatatoState(e);handleChange(e) }}\n                         label ={item?.data().label} name=\"store_category\" id={item?.data().id} value={item?.data().value}\n\n                         className={errors.store_category && touched.store_category ? \"is-invalid\" : null}/>\n\n                      ))}\n\n                      {/*\n                      // <Form.Check inline  onChange={SaveFormDatatoState} label =\"Entertainment\" name=\"store_category\" id=\"1\" value=\"entertainment\" />\n                      // <Form.Check inline  onChange={SaveFormDatatoState} label =\"Dining\" name=\"store_category\" id=\"2\" value=\"dining\" />\n                      // <Form.Check inline  onChange={SaveFormDatatoState} label =\"Women\" name=\"store_category\" id=\"3\" value=\"women\" />\n                      // <Form.Check inline  onChange={SaveFormDatatoState} label =\"Men\" name=\"store_category\" id=\"4\" value=\"men\" />\n                      */}\n\n                      <Form.Control.Feedback type=\"invalid\">\n                        {errors.store_category}\n                      </Form.Control.Feedback>\n\n                  </Form.Group>\n                  <select class=\"form-select-sm my-3\" aria-label=\"Default select example\" onChange={(e) => {SaveFormDatatoState(e);handleChange(e) }} name=\"floor_option\">\n                  <option value=\"ground_floor\" selected>Ground Floor</option>\n                    <option value=\"first_floor\" selected>First Floor</option>\n                    <option value=\"second_floor\">Second Floor</option>\n                    <option value=\"third_floor\">Third Floor</option>\n                  </select>\n\n                  <br />\n                  <Button variant=\"primary\"  type=\"submit\" className={dirty && isValid ?\"\": 'disabled-btn'}\n                  disabled={!(dirty && isValid)}\n                  >Upload</Button>\n              </Form>\n            )}\n              </Formik>\n          </div>\n          <div className=\"row my-4\">\n          {storeLoading && <div class=\"d-flex justify-content-center\">\n                              <div class=\"spinner-border\" role=\"status\">\n                                <span class=\"sr-only\"></span>\n                              </div>\n                            </div>}\n            {storeSnapshot?.docs?.map((store) => (\n                <div className=\"col-md-3\">\n                  <div className=\"card  text-center mb-5 \">\n                    <div>\n                      <img className=\"card-img-top p-5\"  src={store?.data()?.image_url} />\n                    </div>\n                    <h4 className=\"card-title\" style={{fontWeight: \"600\"}}>{store?.data()?.name}</h4>\n\n                    <div className=\"card-body\">\n                      <div className=\"card-text\">{store?.data()?.timing}</div>\n                      <span style={{color: \"rgba(0,0,0,0.5)\"}}>{store?.data()?.contact_detail}</span>\n                    </div>\n                    <div className=\"card-footer text-muted d-flex justify-content-between\">\n\n                        <Button variant=\"success\" onClick={() => {setupdateStore({...store?.data(), id: store?.id}); setShow(true) }}>\n                          EDIT</Button>\n\n                        <Button variant=\"danger\" onClick={e =>\n                            window.confirm(\"Are you sure you wish to delete this item?\") &&\n                            deleteItem(store?.id, store?.data()?.image_url)\n                        }>DELETE</Button>\n\n                    </div>\n                  </div>\n\n                </div>\n\n              ))}\n          </div>\n\n        </div>\n        </div>\n        <Suspense fallback = {<div>Loading.... </div>}>\n              <StoreUpdate sdata = {updateStore} openHandle = {openHandle} closeHandle = {closeHandle} show = {show}  />\n        </Suspense>\n\n    </>\n  );\n}\nexport default StoreManage;\n"]},"metadata":{},"sourceType":"module"}