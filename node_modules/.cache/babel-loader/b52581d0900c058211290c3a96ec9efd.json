{"ast":null,"code":"var _jsxFileName = \"/Users/RPSB/Downloads/Grand Venice React Website Code/src/components/admin/StoreUpdate.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo, useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport TopRibbon from \"../includes/TopRibbon\";\nimport TopNavbar from \"../includes/Navbar\";\nimport SubscribeSection from \"../includes/SubscribeSection\";\nimport Footer from \"../includes/Footer\";\nimport Feedback from \"../includes/Feedback\";\nimport { Form, FormControl, Button, Modal } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StoreUpdate = props => {\n  _s();\n\n  var _categorySnapshot$doc;\n\n  const {\n    sdata,\n    openHandle,\n    closeHandle,\n    show\n  } = props; //category snapShot\n\n  const [categorySnapshot, categoryloading, categoryerror] = useCollection(firebase.firestore().collection('storeCategory'));\n  const [storeData, setStoreData] = useState({ ...sdata\n  });\n  const [imgupload, setimgupload] = useState(false);\n  useEffect(() => {\n    setStoreData({ ...sdata\n    });\n  }, [sdata]);\n\n  const SaveFormDatatoState = e => {\n    switch (e.target.name) {\n      case \"store_name\":\n        setStoreData({ ...storeData,\n          name: e.target.value\n        });\n        break;\n\n      case \"floor_option\":\n        setStoreData({ ...storeData,\n          [e.target.name]: e.target.value\n        });\n        break;\n\n      case \"store_img\":\n        setStoreData({ ...storeData,\n          image_url: e.target.files[0]\n        });\n        setimgupload(true);\n        break;\n\n      case \"store_num\":\n        setStoreData({ ...storeData,\n          contact_detail: e.target.value\n        });\n        break;\n\n      case \"store_timing\":\n        setStoreData({ ...storeData,\n          timing: e.target.value\n        });\n        break;\n\n      case \"store_desc\":\n        setStoreData({ ...storeData,\n          description: e.target.value\n        });\n        break;\n\n      case \"store_category\":\n        console.log(\"target value initial \", e);\n        let newArr = [...(storeData === null || storeData === void 0 ? void 0 : storeData.category)];\n\n        if (e.target.checked) {\n          setStoreData({ ...storeData,\n            category: [...newArr, e.target.value]\n          });\n        } else {\n          var index = newArr.indexOf(e.target.value);\n          console.log(index);\n          newArr.splice(index, 1);\n          setStoreData({ ...storeData,\n            category: [...newArr]\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const SaveStatetoDB = (data, e) => {\n    e.preventDefault();\n\n    if (imgupload) {\n      var _data$image_url;\n\n      const uploadTask = firebase.storage().ref(`${data === null || data === void 0 ? void 0 : data.name}/`).child(data === null || data === void 0 ? void 0 : (_data$image_url = data.image_url) === null || _data$image_url === void 0 ? void 0 : _data$image_url.name).put(data === null || data === void 0 ? void 0 : data.image_url);\n      uploadTask.on('state_changed', snapShot => {//takes a snap shot of the process as it is happening\n      }, err => {\n        //catches the errors\n        console.log(err);\n      }, () => {\n        var _data$image_url2;\n\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        firebase.storage().ref(`${data === null || data === void 0 ? void 0 : data.name}/`).child(data === null || data === void 0 ? void 0 : (_data$image_url2 = data.image_url) === null || _data$image_url2 === void 0 ? void 0 : _data$image_url2.name).getDownloadURL().then(fireBaseUrl => {\n          firebase.firestore().collection(\"store\").doc(storeData === null || storeData === void 0 ? void 0 : storeData.id).update({ ...storeData,\n            image_url: fireBaseUrl\n          });\n        }).then(bruh => alert(\"store updated success\")).catch(error => {\n          console.error(error);\n        }).finally(result => setStoreData({\n          category: []\n        }));\n      });\n    } else {\n      firebase.firestore().collection(\"store\").doc(storeData === null || storeData === void 0 ? void 0 : storeData.id).update({ ...storeData\n      }).then(bruh => alert(\"store updated success\")).catch(error => {\n        console.error(error);\n      }).finally(result => setStoreData({}));\n    } //   const uploadTask = firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).put(data?.image_url);\n    //\n    //   uploadTask.on('state_changed',\n    // (snapShot) => {\n    //   //takes a snap shot of the process as it is happening\n    // }, (err) => {\n    //   //catches the errors\n    //   console.log(err)\n    // }, () => {\n    //   // gets the functions from storage refences the image storage in firebase by the children\n    //   // gets the download url then sets the image from firebase as the value for the imgUrl key:\n    //   firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).getDownloadURL()\n    //    .then(fireBaseUrl => {\n    //      firebase.firestore().collection(\"store\").doc(storeData?.id).update({\n    //        ...storeData,\n    //        image_url: fireBaseUrl,\n    //      })\n    //    }).then((bruh) => alert(\"store updated success\"))\n    //     .catch((error) => {console.error(error);})\n    //     .finally((result) => setStoreData({category:[]}))\n    // })\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: closeHandle,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Store Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: e => SaveStatetoDB(storeData, e),\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Store Image/Logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"file\",\n              onChange: SaveFormDatatoState,\n              name: \"store_img\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Store Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: SaveFormDatatoState,\n              name: \"store_name\",\n              value: storeData === null || storeData === void 0 ? void 0 : storeData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Store Timing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: SaveFormDatatoState,\n              name: \"store_timing\",\n              placeholder: \"Open 11am  -  8pm\",\n              value: storeData === null || storeData === void 0 ? void 0 : storeData.timing\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Store Description \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              onChange: SaveFormDatatoState,\n              name: \"store_desc\",\n              value: storeData === null || storeData === void 0 ? void 0 : storeData.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Store Contact Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: SaveFormDatatoState,\n              name: \"store_num\",\n              value: storeData === null || storeData === void 0 ? void 0 : storeData.contact_detail\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Store Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 54\n            }, this), categorySnapshot === null || categorySnapshot === void 0 ? void 0 : (_categorySnapshot$doc = categorySnapshot.docs) === null || _categorySnapshot$doc === void 0 ? void 0 : _categorySnapshot$doc.map(item => {\n              var _storeData$category, _item$data;\n\n              return /*#__PURE__*/_jsxDEV(Form.Check, {\n                inline: true,\n                onChange: SaveFormDatatoState,\n                checked: storeData === null || storeData === void 0 ? void 0 : (_storeData$category = storeData.category) === null || _storeData$category === void 0 ? void 0 : _storeData$category.includes(item === null || item === void 0 ? void 0 : (_item$data = item.data()) === null || _item$data === void 0 ? void 0 : _item$data.value),\n                label: item === null || item === void 0 ? void 0 : item.data().label,\n                name: \"store_category\",\n                id: item === null || item === void 0 ? void 0 : item.data().id,\n                value: item === null || item === void 0 ? void 0 : item.data().value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-select\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              class: \"form-select-sm\",\n              \"aria-label\": \"Default select example\",\n              onChange: SaveFormDatatoState,\n              name: \"floor_option\",\n              value: storeData === null || storeData === void 0 ? void 0 : storeData.floor_option,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ground_floor\",\n                children: \"Ground Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"first_floor\",\n                children: \"First Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"second_floor\",\n                children: \"Second Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"third_floor\",\n                children: \"Third Floor\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            onClick: closeHandle,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(StoreUpdate, \"YjGhWxuSpkWyldo8lao5l1LqSU4=\", false, function () {\n  return [useCollection];\n});\n\n_c = StoreUpdate;\nexport default StoreUpdate;\n\nvar _c;\n\n$RefreshReg$(_c, \"StoreUpdate\");","map":{"version":3,"sources":["/Users/RPSB/Downloads/Grand Venice React Website Code/src/components/admin/StoreUpdate.js"],"names":["React","memo","useState","useEffect","firebase","useCollection","useDocument","connect","Link","TopRibbon","TopNavbar","SubscribeSection","Footer","Feedback","Form","FormControl","Button","Modal","StoreUpdate","props","sdata","openHandle","closeHandle","show","categorySnapshot","categoryloading","categoryerror","firestore","collection","storeData","setStoreData","imgupload","setimgupload","SaveFormDatatoState","e","target","name","value","image_url","files","contact_detail","timing","description","console","log","newArr","category","checked","index","indexOf","splice","SaveStatetoDB","data","preventDefault","uploadTask","storage","ref","child","put","on","snapShot","err","getDownloadURL","then","fireBaseUrl","doc","id","update","bruh","alert","catch","error","finally","result","docs","map","item","includes","label","floor_option"],"mappings":"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","sourcesContent":["import React, { memo, useState, useEffect } from \"react\";\nimport firebase from \"firebase\";\nimport { useCollection, useDocument } from \"react-firebase-hooks/firestore\";\nimport { connect } from \"react-redux\";\nimport { Link } from 'react-router-dom';\nimport TopRibbon from \"../includes/TopRibbon\";\nimport TopNavbar from \"../includes/Navbar\";\nimport SubscribeSection from \"../includes/SubscribeSection\";\nimport Footer from \"../includes/Footer\";\nimport Feedback from \"../includes/Feedback\";\nimport { Form, FormControl, Button, Modal } from \"react-bootstrap\";\n\nconst StoreUpdate = (props) => {\n\n  const { sdata, openHandle, closeHandle, show } = props;\n  //category snapShot\n  const [categorySnapshot, categoryloading, categoryerror] = useCollection(firebase.firestore().collection('storeCategory'));\n\n  const [storeData, setStoreData] = useState({ ...sdata });\n  const [imgupload, setimgupload] = useState(false);\n\n  useEffect(() => {\n    setStoreData({ ...sdata });\n\n  }, [sdata])\n\n  const SaveFormDatatoState = (e) => {\n\n    switch (e.target.name) {\n\n      case \"store_name\":\n        setStoreData({\n          ...storeData,\n          name: e.target.value,\n        });\n        break;\n\n      case \"floor_option\":\n        setStoreData({\n          ...storeData,\n          [e.target.name]: e.target.value,\n        });\n\n        break;\n\n      case \"store_img\":\n        setStoreData({\n          ...storeData,\n          image_url: e.target.files[0],\n        });\n        setimgupload(true);\n        break;\n\n      case \"store_num\":\n        setStoreData({\n          ...storeData,\n          contact_detail: e.target.value,\n        });\n        break;\n\n      case \"store_timing\":\n        setStoreData({\n          ...storeData,\n          timing: e.target.value,\n        });\n        break;\n\n      case \"store_desc\":\n        setStoreData({\n          ...storeData,\n          description: e.target.value,\n        });\n        break;\n\n      case \"store_category\":\n        console.log(\"target value initial \", e);\n        let newArr = [...storeData?.category];\n        if (e.target.checked) {\n          setStoreData({\n            ...storeData,\n            category: [...newArr, e.target.value],\n          });\n        }\n        else {\n          var index = newArr.indexOf(e.target.value);\n          console.log(index);\n          newArr.splice(index, 1);\n          setStoreData({\n            ...storeData,\n            category: [...newArr],\n          });\n        }\n        break;\n\n      default:\n        break;\n    }\n\n  }\n\n\n  const SaveStatetoDB = (data, e) => {\n    e.preventDefault();\n    if (imgupload) {\n      const uploadTask = firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).put(data?.image_url);\n\n      uploadTask.on('state_changed',\n        (snapShot) => {\n          //takes a snap shot of the process as it is happening\n        }, (err) => {\n          //catches the errors\n          console.log(err)\n        }, () => {\n          // gets the functions from storage refences the image storage in firebase by the children\n          // gets the download url then sets the image from firebase as the value for the imgUrl key:\n          firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).getDownloadURL()\n            .then(fireBaseUrl => {\n              firebase.firestore().collection(\"store\").doc(storeData?.id).update({\n                ...storeData,\n                image_url: fireBaseUrl,\n              })\n            }).then((bruh) => alert(\"store updated success\"))\n            .catch((error) => { console.error(error); })\n            .finally((result) => setStoreData({ category: [] }))\n        })\n    }\n    else {\n      firebase.firestore().collection(\"store\").doc(storeData?.id).update({\n        ...storeData,\n      })\n        .then((bruh) => alert(\"store updated success\"))\n        .catch((error) => { console.error(error); })\n        .finally((result) => setStoreData({})\n        )\n\n    }\n    //   const uploadTask = firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).put(data?.image_url);\n    //\n    //   uploadTask.on('state_changed',\n    // (snapShot) => {\n    //   //takes a snap shot of the process as it is happening\n    // }, (err) => {\n    //   //catches the errors\n    //   console.log(err)\n    // }, () => {\n    //   // gets the functions from storage refences the image storage in firebase by the children\n    //   // gets the download url then sets the image from firebase as the value for the imgUrl key:\n    //   firebase.storage().ref(`${data?.name}/`).child(data?.image_url?.name).getDownloadURL()\n    //    .then(fireBaseUrl => {\n    //      firebase.firestore().collection(\"store\").doc(storeData?.id).update({\n    //        ...storeData,\n    //        image_url: fireBaseUrl,\n    //      })\n    //    }).then((bruh) => alert(\"store updated success\"))\n    //     .catch((error) => {console.error(error);})\n    //     .finally((result) => setStoreData({category:[]}))\n    // })\n  }\n\n\n  return (\n    <>\n      <Modal show={show} onHide={closeHandle}>\n        <Modal.Header closeButton>\n          <Modal.Title>Store Update</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <Form onSubmit={(e) => SaveStatetoDB(storeData, e)}>\n            <Form.Group>\n              <Form.Label>Store Image/Logo</Form.Label>\n              <Form.Control type=\"file\" onChange={SaveFormDatatoState} name=\"store_img\" />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Store Name</Form.Label>\n              <Form.Control type=\"text\" onChange={SaveFormDatatoState} name=\"store_name\" value={storeData?.name} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Store Timing</Form.Label>\n              <Form.Control type=\"text\" onChange={SaveFormDatatoState} name=\"store_timing\" placeholder=\"Open 11am  -  8pm\"\n                value={storeData?.timing} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Store Description </Form.Label>\n              <Form.Control as=\"textarea\" onChange={SaveFormDatatoState} name=\"store_desc\" value={storeData?.description} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Store Contact Number</Form.Label>\n              <Form.Control type=\"text\" onChange={SaveFormDatatoState} name=\"store_num\" value={storeData?.contact_detail} />\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>Store Category</Form.Label><br />\n              {/*<Form.Check inline  onChange={SaveFormDatatoState} checked={storeData?.category?.includes(\"entertainment\")} label =\"Entertainment\" name=\"store_category\" id=\"1\" value=\"entertainment\" />*/}\n              {categorySnapshot?.docs?.map((item) => (\n                <Form.Check inline onChange={SaveFormDatatoState} checked={storeData?.category?.includes(item?.data()?.value)}\n                  label={item?.data().label} name=\"store_category\" id={item?.data().id} value={item?.data().value} />\n\n              ))}\n\n            </Form.Group>\n            <div className=\"custom-select\">\n              <select class=\"form-select-sm\"\n                aria-label=\"Default select example\"\n                onChange={SaveFormDatatoState}\n                name=\"floor_option\" value={storeData?.floor_option}>\n                <option value=\"ground_floor\" >Ground Floor</option>\n                <option value=\"first_floor\" >First Floor</option>\n                <option value=\"second_floor\">Second Floor</option>\n                <option value=\"third_floor\">Third Floor</option>\n              </select>\n            </div>\n            <br />\n            <Button variant=\"primary\" type=\"submit\" onClick={closeHandle}>Upload</Button>\n          </Form>\n\n        </Modal.Body>\n\n      </Modal>\n    </>\n  );\n}\nexport default StoreUpdate;\n"]},"metadata":{},"sourceType":"module"}